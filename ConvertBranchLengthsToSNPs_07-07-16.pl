#!/usr/bin/perl
# Searching files in a directory
use warnings;
use strict;

# Author: Joseph Crisp
# Convert the branch lengths of a phylogenetic tree produced by "phylip dnaml" into SNP distances

# Command Line Structure
# perl ConvertBranchLengthsToSNPs.pl nSites path-o-gen_mlTree.tree 

# NEXUS tree file structure:
#	#NEXUS
#	
#	Begin taxa;
#		Dimensions ntax=103;
#		Taxlabels
#			AgR111_1987
#			AgR11_2009
#			AgR121_1988
#			AgR122_1992
#			...
#			;
#	End;
#	
#	Begin trees;
#		Translate
#			1 AgR111_1987,
#			2 AgR11_2009,
#			3 AgR121_1988,
#			4 AgR122_1992,
#			...
#			;
#	tree TREE1 = [&R] ((((106:4.9E-4,107:2.4E-4):0.00619,(((108:9.7E-4,(109:7.2E-4,(110:4.8E-4,111:4.8E-4):0.0):0.0):7.2E-4,(((112:0.00121,113:6.0E-5):7.2E-4,114:0.00121):2.4E-4,((115:4.8E-4,116:6.0E-5):0.0012,((117:0.00169,118:2.4E-4):2.4E-4,119:0.00145):0.0):0.0):0.0):0.00314,(120:2.4E-4,121:2.4E-4):0.00388):0.00109):0.04566,(((122:0.00292,(123:0.00246,124:7.2E-4):0.00145):0.00121,(((125:6.0E-5,126:4.8E-4):9.6E-4,(127:2.4E-4,128:3.0E-4):9.0E-4):4.8E-4,129:7.3E-4):2.3E-4):0.01063,((((((((130:0.00436,(131:0.00341,((((132:6.0E-5,133:0.01115):9.7E-4,134:7.2E-4):9.7E-4,(135:6.0E-5,136:6.0E-5):0.00654):2.4E-4,((137:0.00218,138:0.00194):0.00169,(139:0.00177,140:0.00291):0.00404):0.0):0.0):2.7E-4):0.0019,(141:0.00441,(142:0.0048,143:0.00365):0.00176):7.4E-4):6.0E-5,(144:0.00414,(((145:0.00174,146:0.00291):6.0E-5,147:0.00388):9.7E-4,(148:0.00679,149:0.00484):0.0):0.0):9.7E-4):0.0012,((150:0.00709,151:0.00193):0.00194,((152:7.2E-4,153:0.00485):0.00412,((154:0.00121,155:0.00244):0.00121,(156:6.0E-5,157:6.0E-5):7.2E-4):7.2E-4):0.00169):0.00121):0.00802,((158:0.00814,(159:0.00584,(160:0.00267,(161:0.00583,((162:9.7E-4,((163:6.0E-5,(164:0.00169,165:0.0):0.0):9.7E-4,(166:9.6E-4,(167:4.9E-4,168:4.8E-4):4.8E-4):0.0):0.0):4.8E-4,169:0.0012):6.0E-5):5.1E-4):0.0031):0.00222):6.0E-5,170:0.00462):0.00843):2.2E-4,(((171:2.5E-4,(172:4.8E-4,173:0.0):0.0):7.3E-4,174:4.8E-4):0.00148,(175:6.0E-5,(176:2.5E-4,177:6.0E-5):2.4E-4):0.00169):0.0082):4.8E-4,(178:0.00878,(((((179:0.00421,180:0.00315):0.00522,(((181:4.8E-4,182:0.0080):6.0E-5,183:7.2E-4):4.8E-4,(184:0.00217,(185:0.00826,(186:2.4E-4,(187:3.0E-5,188:0.0):0.0):0.0041):0.00193):6.0E-5):0.00191):0.00556,189:0.00338):6.0E-5,(190:9.8E-4,((191:0.0013,192:0.00199):0.00208,193:9.8E-4):2.4E-4):0.00169):8.1E-4,((194:0.00265,195:0.0029):0.0012,((196:0.00194,(197:0.00145,(198:9.7E-4,199:9.8E-4):7.2E-4):6.0E-5):0.00217,(200:6.0E-5,(201:0.00242,202:9.7E-4):6.0E-5):0.00169):0.0):0.0):0.00136):0.0109):0.00144,((((203:0.00193,((204:0.0022,(205:6.0E-5,206:6.0E-5):0.00146):0.00268,((207:0.00269,208:7.2E-4):2.4E-4,((209:4.8E-4,210:7.3E-4):0.00169,211:0.00291):6.0E-5):4.8E-4):6.0E-5):0.0012,(212:0.00315,(((213:4.9E-4,((214:6.0E-5,215:6.0E-5):2.4E-4,(216:7.3E-4,217:0.0010):0.0):0.0):7.3E-4,((218:2.4E-4,(219:6.0E-5,(220:2.4E-4,(221:6.0E-5,(222:6.0E-5,223:0.0):0.0):0.0):0.0):0.0):2.4E-4,(224:6.0E-5,225:4.9E-4):4.9E-4):4.9E-4):0.00122,226:0.00217):4.7E-4):0.00242):0.0085,((227:0.0012,228:0.00144):0.00266,(((229:9.6E-4,230:0.0012):0.00216,(231:0.00507,((232:7.2E-4,233:4.8E-4):0.00506,((234:0.00169,235:0.00217):4.8E-4,(236:0.00169,(237:7.2E-4,(238:0.00193,(239:0.00338,((240:7.2E-4,(241:6.0E-5,(242:2.4E-4,243:0.0):0.0):0.00289):2.4E-4,((244:4.8E-4,245:0.00359):5.1E-4,246:0.00218):6.0E-5):2.4E-4):4.8E-4):0.0):0.0):0.0):7.2E-4):4.8E-4):4.8E-4):4.8E-4,(((247:0.00338,248:0.00313):2.4E-4,(((249:2.4E-4,(250:4.8E-4,(251:2.4E-4,252:0.0):0.0):0.0):2.4E-4,(253:0.00144,(254:2.4E-4,255:6.0E-5):4.8E-4):4.8E-4):0.00192,(((((256:4.8E-4,257:6.0E-5):7.2E-4,258:0.00193):7.2E-4,(259:6.0E-5,(260:2.4E-4,((261:4.8E-4,(262:9.6E-4,(263:6.0E-5,(264:0.0012,265:0.0012):0.0):0.0):2.4E-4):2.4E-4,(266:2.4E-4,267:0.00144):0.0):0.0):0.0):9.6E-4):6.0E-5,((268:0.00216,269:6.0E-5):2.4E-4,(270:6.0E-5,(271:2.4E-4,(272:4.8E-4,((273:2.4E-4,274:2.4E-4):9.6E-4,(275:0.00144,(276:0.00265,((277:4.8E-4,(278:6.0E-5,279:6.0E-5):7.2E-4):2.4E-4,(280:7.2E-4,((281:4.8E-4,(282:4.8E-4,(283:2.4E-4,284:4.8E-4):6.0E-5):4.8E-4):2.3E-4,(285:0.00168,((((286:6.0E-5,287:6.0E-5):2.4E-4,288:6.0E-5):4.8E-4,(289:2.4E-4,290:4.8E-4):6.0E-5):7.2E-4,(291:0.00266,(292:7.2E-4,(293:2.4E-4,294:9.7E-4):9.6E-4):2.4E-4):6.0E-5):4.8E-4):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):2.4E-4):0.00144,(295:0.00362,(296:7.2E-4,297:9.6E-4):0.00217):0.0):0.0):0.0):0.00168,((298:0.00194,(((299:9.6E-4,300:2.4E-4):6.0E-5,(301:4.8E-4,(302:3.0E-5,303:0.0):0.0):2.4E-4):4.8E-4,304:0.00168):0.00265):0.00192,(305:0.0012,306:4.8E-4):0.00265):9.6E-4):6.0E-5):2.3E-4):0.00995):6.5E-4,307:3.0E-5):3.0E-5):3.0E-5):0.0344):0.002756521973407242,((308:0.00338,((309:9.6E-4,(310:4.8E-4,311:6.0E-5):7.2E-4):0.00434,((312:0.00338,313:9.7E-4):9.7E-4,(314:0.00459,(((315:4.8E-4,316:0.00169):0.00217,((317:2.4E-4,318:4.8E-4):0.00169,319:0.00338):9.6E-4):0.00169,((320:0.00169,321:0.00169):0.00289,322:0.00386):2.4E-4):0.0):0.0):0.0):0.0):0.02779,(((((2:0.00361,(((3:4.8E-4,(4:6.0E-5,5:6.0E-5):7.2E-4):6.0E-5,(6:2.4E-4,7:9.6E-4):4.8E-4):4.8E-4,(8:4.8E-4,((9:6.0E-5,10:6.0E-5):0.00119,(11:0.00168,12:7.2E-4):0.0):0.0):4.8E-4):4.8E-4):0.0012,(13:0.00361,14:7.2E-4):0.0012):0.00677,((15:2.4E-4,(16:6.0E-5,17:0.0):0.0):4.8E-4,(18:7.2E-4,(19:0.00191,(20:7.2E-4,(21:7.2E-4,22:6.0E-5):4.8E-4):0.0):0.0):0.0):0.00771):0.00508,((23:6.0E-5,24:0.0012):0.00968,(((25:0.00192,26:0.0024):9.6E-4,((27:9.6E-4,(28:4.8E-4,29:4.8E-4):6.0E-5):0.00288,(30:4.8E-4,(31:4.8E-4,(32:7.2E-4,((33:2.4E-4,(34:2.4E-4,(35:6.0E-5,(36:2.4E-4,37:3.2E-4):0.0):0.0):3.2E-4):3.1E-4,(38:7.2E-4,((39:7.2E-4,(40:7.2E-4,((41:6.0E-5,42:6.0E-5):2.4E-4,(43:4.8E-4,44:0.0):0.0):0.0):0.0):2.4E-4,((45:2.4E-4,46:4.8E-4):2.4E-4,47:4.8E-4):2.4E-4):0.0):0.0):0.0):0.0):0.0):0.00312):7.2E-4):0.00192,(((((48:0.00289,49:0.00192):6.0E-5,(50:0.00385,51:0.00168):0.00144):0.00216,(52:6.0E-5,53:7.2E-4):0.00408):4.7E-4,(((((54:2.4E-4,55:6.0E-5):0.00211,56:2.4E-4):5.3E-4,(57:6.0E-5,(58:2.4E-4,(59:6.0E-5,60:0.0):0.0):0.0):0.0024):7.2E-4,61:0.00192):6.0E-5,(62:0.00168,((63:6.0E-5,(64:6.0E-5,(((65:2.4E-4,66:6.0E-5):2.4E-4,67:6.0E-5):4.8E-4,(68:4.8E-4,((69:6.0E-5,70:2.3E-4):7.2E-4,71:0.0):0.0):0.0):0.0):0.0):0.00216,((72:6.0E-5,73:6.0E-5):0.0036,(((74:0.00241,75:0.00264):6.0E-5,(76:2.4E-4,(77:6.0E-5,((78:6.0E-5,79:6.0E-5):4.8E-4,(80:4.8E-4,81:0.0):0.0):0.0):0.0):0.00264):2.4E-4,(82:0.00192,(83:0.00168,84:0.00168):6.0E-5):4.8E-4):0.0):0.0):2.4E-4):2.4E-4):0.00144):4.8E-4,(((85:0.0041,86:0.0024):7.2E-4,(87:0.0024,((88:0.00408,89:0.00145):0.00145,(90:0.00289,(91:0.00168,92:0.00241):2.4E-4):0.0):0.0):0.0):0.00264,((93:0.00313,94:0.00434):4.7E-4,(95:6.0E-5,(((96:2.4E-4,(97:2.4E-4,98:6.0E-5):7.2E-4):4.8E-4,(99:4.8E-4,(100:2.4E-4,101:0.0):0.0):0.0):2.4E-4,(102:0.0012,(103:4.8E-4,(104:6.0E-5,105:4.8E-4):9.6E-4):2.4E-4):0.0):0.0):0.00312):7.2E-4):0.0):0.0):0.00724):4.4E-4):0.00679,1:0.00433):0.02103):0.013623478026592755);
#	End;

# The branch length is the expected number of changes per site. For concatenated sequences, this value can be converted into a per genome scale
# by multiplying by the number of sites in the genome that were examined.

# Get the concatenated sequence length from the command line
my $nSites = shift @ARGV;

# Open the NEXUS tree file
my $treeFile = shift @ARGV;
open TREE, $treeFile or die "Couldn't open $treeFile:$!";

# Initialise variables to handle newick tree
my @treeChars;
my $found = 0;
my $branchLength = "";

# Initialise variables to store the edited newick tree
my $editedTree = "";

# Initialise variables to parse the file
my $line;
my @parts;

# Begin reading the NEXUS tree file
while(<TREE>){
	$line = $_;
	chomp($line);
	
	# Print all lines out to file except tree
	if($line !~ /^tree/){
		print "$line\n";
		next;
	}
	
	# Store the newick tree as a character array
	@parts = split /\ /, $line;
	@treeChars = split //, $parts[4];
	
	# Scale the branch lengths in the newick tree ), 
	for(my $i = 0; $i < scalar(@treeChars); $i++){
		
		# Have we found a new branch length?
		if($treeChars[$i] eq ":"){
			$found = 1;
			$branchLength = "";
			
			# Continue building the edited tree
			$editedTree = $editedTree . "" . $treeChars[$i];
		
		# Are we still examining a branch length?
		}elsif($found == 1 && $treeChars[$i] ne ")" && $treeChars[$i] ne ","){
			$branchLength = $branchLength . "" . $treeChars[$i];
			
		# Have we found all of the current branch length?
		}elsif($found == 1 && ($treeChars[$i] eq ")" || $treeChars[$i] eq ",")){
			
			# Scale the branch length
			$branchLength = $branchLength * $nSites;
			
			# Add the new branch length into the tree
			$editedTree = $editedTree . "" . $branchLength;
			
			# Reset the branch length info
			$branchLength = "";
			$found = 0;
			
			# Continue building the edited tree
			$editedTree = $editedTree . "" . $treeChars[$i];
		
		# Currently not looking at a branch length
		}else{
			$editedTree = $editedTree . "" . $treeChars[$i];
		}
	}
	
	print "$parts[0] $parts[1] $parts[2] $parts[3] $editedTree\n";	
}
close(TREE);